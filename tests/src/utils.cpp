#include <gtest/gtest.h>
#include "irlba/utils.hpp"
#include "Eigen/Dense"

TEST(UtilsTest, Orthogonalize) {
    irlba::OrthogonalizeVector y;

    // Generated by svd(matrix(rnorm(20), 5, 4))$u
    Eigen::MatrixXd m(5, 4);
    m <<  0.1186600,  0.9038716,  0.10194199,  0.2484399218,
         -0.3090796, -0.1659502,  0.52915799, -0.3366910627,
         -0.3107643, -0.2636561, -0.35950860,  0.7248074228,
         -0.1683330,  0.1634341, -0.75523159, -0.5473305105,
          0.8749166, -0.2434161, -0.09989224, -0.0004957394;

    // Generated by rnorm(5)
    Eigen::VectorXd v(5);
    v << -0.24054848, -0.04785069, -0.76491749, -0.65634291, 0.62815141;

    y(m, v);

    // Checking that the L2 norm is not all-zero.
    double l2 = 0;
    for (auto x : v) { l2 += x*x; }
    EXPECT_TRUE(l2 > 0.1);

    // Checking that we do have orthogonality.
    for (size_t i = 0; i < 4; ++i) {
        auto col = m.col(i);
        auto cit = col.begin();
        double sum = 0;
        for (auto x : v) {
            sum += x * (*cit);
        }
        EXPECT_TRUE(sum < 0.0000000001);
    }
}

